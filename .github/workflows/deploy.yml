name: Blue-Green Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/dockerized-service-deployment:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Determine Active Server
        id: active-server
        run: |
          ACTIVE_SERVER=$(curl -s http://${{ secrets.BLUE_HOST }}:8080 || true)
          if [[ -n "$ACTIVE_SERVER" ]]; then
            echo "Deploying to GREEN server..."
            echo "TARGET_HOST=${{ secrets.GREEN_HOST }}" >> "$GITHUB_ENV"
          else
            echo "Deploying to BLUE server..."
            echo "TARGET_HOST=${{ secrets.BLUE_HOST }}" >> "$GITHUB_ENV"
          fi

      - name: Deploy to Target Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.TARGET_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/dockerized-service-deployment:latest
            docker pull $IMAGE_NAME
            docker stop my_app || true
            docker rm my_app || true
            docker run -d --name my_app -p 8080:8080 $IMAGE_NAME

      - name: Health Check
        run: |
          sleep 10
          if curl -s http://${{ env.TARGET_HOST }}:8080; then
            echo "Deployment successful."
          else
            echo "Deployment failed!" && exit 1
          fi
#----

